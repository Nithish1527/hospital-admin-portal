version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: hospital-postgres
    environment:
      POSTGRES_DB: hospital_db
      POSTGRES_USER: hospital_user
      POSTGRES_PASSWORD: hospital_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - hospital-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hospital_user -d hospital_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: hospital-api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - USER_SERVICE_URL=http://user-service:8081
      - PATIENT_SERVICE_URL=http://patient-service:8082
      - APPOINTMENT_SERVICE_URL=http://appointment-service:8083
      - DEPARTMENT_SERVICE_URL=http://department-service:8084
      - MEDICAL_SERVICE_URL=http://medical-service:8085
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hospital-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # User Service
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    container_name: hospital-user-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=hospital_db
      - DB_USERNAME=hospital_user
      - DB_PASSWORD=hospital_password
      - JWT_SECRET=hospitalAdminPortalSecretKey2024
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hospital-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Patient Service
  patient-service:
    build:
      context: ./backend/patient-service
      dockerfile: Dockerfile
    container_name: hospital-patient-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=hospital_db
      - DB_USERNAME=hospital_user
      - DB_PASSWORD=hospital_password
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hospital-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Appointment Service
  appointment-service:
    build:
      context: ./backend/appointment-service
      dockerfile: Dockerfile
    container_name: hospital-appointment-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=hospital_db
      - DB_USERNAME=hospital_user
      - DB_PASSWORD=hospital_password
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hospital-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Department Service
  department-service:
    build:
      context: ./backend/department-service
      dockerfile: Dockerfile
    container_name: hospital-department-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=hospital_db
      - DB_USERNAME=hospital_user
      - DB_PASSWORD=hospital_password
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hospital-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Medical Service
  medical-service:
    build:
      context: ./backend/medical-service
      dockerfile: Dockerfile
    container_name: hospital-medical-service
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=hospital_db
      - DB_USERNAME=hospital_user
      - DB_PASSWORD=hospital_password
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hospital-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hospital-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8080
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - hospital-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  hospital-network:
    driver: bridge